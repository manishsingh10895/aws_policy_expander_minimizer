/// The contents of this file come from Amazon.
/// The AWS Policy Generator (http://awspolicygen.s3.amazonaws.com/policygen.html)
///  loads a file from the following URL:
/// https://awsiamconsole.s3.amazonaws.com/iam/assets/js/bundles/policies.js
/// From the browser console, you can extract this data like:
/// JSON.stringify(app.PolicyEditorConfig.serviceMap)
/// This is currently the *only* way to obtain a somewhat definitive
/// list of AWS permissions.
/// Assume Amazon holds the original copyright for this data.
/// Contact Patrick Kelley <pkelley@netflix.com> with any questions.

library aws_policy_expander_minimizer.permissions;

// Date of update: March 30th, 2015
// The following autoscaling permissions were not in the policy generator
//  and were obtained from AWS manually:
//  autoscaling:AttachInstances
//  autoscaling:CompleteLifecycleAction
//  autoscaling:DeleteLifecycleHooks
//  autoscaling:DescribeAccountLimits
//  autoscaling:DescribeLifecycleHooksTypes
//  autoscaling:DescribeLifecycleHooks
//  autoscaling:DescribeTerminationPolicyTypes
//  autoscaling:DetachInstances
//  autoscaling:EnterStandby
//  autoscaling:ExitStandby
//  autoscaling:PutLifecycleHook
//  autoscaling:RecordLifecycleActionHeartbeat

Map AWS_PERMISSIONS = {
    "Amazon AppStream": {
        "StringPrefix": "appstream",
        "Actions": [
            "CreateApplication",
            "CreateSession",
            "DeleteApplication",
            "GetApiRoot",
            "GetApplication",
            "GetApplications",
            "GetApplicationError",
            "GetApplicationErrors",
            "GetApplicationStatus",
            "GetSession",
            "GetSessions",
            "GetSessionStatus",
            "UpdateApplication",
            "UpdateApplicationState",
            "UpdateSessionState"
        ]
    },
    "Auto Scaling": {
        "StringPrefix": "autoscaling",
        "Actions": [
            "AttachInstances",
            "CompleteLifecycleAction",
            "CreateAutoScalingGroup",
            "CreateLaunchConfiguration",
            "CreateOrUpdateScalingTrigger",
            "CreateOrUpdateTags",
            "DeleteAutoScalingGroup",
            "DeleteLaunchConfiguration",
            "DeleteLifecycleHook",
            "DeleteNotificationConfiguration",
            "DeletePolicy",
            "DeleteScheduledAction",
            "DeleteTags",
            "DeleteTrigger",
            "DescribeAccountLimits",
            "DescribeAdjustmentTypes",
            "DescribeAutoScalingGroups",
            "DescribeAutoScalingInstances",
            "DescribeAutoScalingNotificationTypes",
            "DescribeLaunchConfigurations",
            "DescribeLifecycleHookTypes",
            "DescribeLifecycleHooks",
            "DescribeMetricCollectionTypes",
            "DescribeNotificationConfigurations",
            "DescribePolicies",
            "DescribeScalingActivities",
            "DescribeScalingProcessTypes",
            "DescribeScheduledActions",
            "DescribeTags",
            "DescribeTerminationPolicyTypes",
            "DescribeTriggers",
            "DetachInstances",
            "DisableMetricsCollection",
            "EnableMetricsCollection",
            "EnterStandby",
            "ExecutePolicy",
            "ExitStandby",
            "PutLifecycleHook",
            "PutNotificationConfiguration",
            "PutScalingPolicy",
            "PutScheduledUpdateGroupAction",
            "RecordLifecycleActionHeartbeat",
            "ResumeProcesses",
            "SetDesiredCapacity",
            "SetInstanceHealth",
            "SuspendProcesses",
            "TerminateInstanceInAutoScalingGroup",
            "UpdateAutoScalingGroup"
        ]
    },
    "Elastic Load Balancing": {
        "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
        "ARNFormat": "arn:aws::elasticloadbalancing:<region>:<account>:loadbalancer/<resource>",
        "StringPrefix": "elasticloadbalancing",
        "Actions": [
            "AddTags",
            "ApplySecurityGroupsToLoadBalancer",
            "AttachLoadBalancerToSubnets",
            "ConfigureHealthCheck",
            "CreateAppCookieStickinessPolicy",
            "CreateLBCookieStickinessPolicy",
            "CreateLoadBalancer",
            "CreateLoadBalancerListeners",
            "CreateLoadBalancerPolicy",
            "DeleteLoadBalancer",
            "DeleteLoadBalancerListeners",
            "DeleteLoadBalancerPolicy",
            "DeregisterInstancesFromLoadBalancer",
            "DescribeInstanceHealth",
            "DescribeLoadBalancerAttributes",
            "DescribeLoadBalancerPolicyTypes",
            "DescribeLoadBalancerPolicies",
            "DescribeLoadBalancers",
            "DescribeTags",
            "DetachLoadBalancerFromSubnets",
            "DisableAvailabilityZonesForLoadBalancer",
            "EnableAvailabilityZonesForLoadBalancer",
            "ModifyLoadBalancerAttributes",
            "RemoveTags",
            "RegisterInstancesWithLoadBalancer",
            "SetLoadBalancerListenerSSLCertificate",
            "SetLoadBalancerPoliciesForBackendServer",
            "SetLoadBalancerPoliciesOfListener"
        ]
    },
    "AWS Elastic Beanstalk": {
        "StringPrefix": "elasticbeanstalk",
        "Actions": [
            "CheckDNSAvailability",
            "CreateApplication",
            "CreateApplicationVersion",
            "CreateConfigurationTemplate",
            "CreateEnvironment",
            "CreateStorageLocation",
            "DeleteApplication",
            "DeleteApplicationVersion",
            "DeleteConfigurationTemplate",
            "DeleteEnvironmentConfiguration",
            "DescribeApplicationVersions",
            "DescribeApplications",
            "DescribeConfigurationOptions",
            "DescribeConfigurationSettings",
            "DescribeEnvironmentResources",
            "DescribeEnvironments",
            "DescribeEvents",
            "ListAvailableSolutionStacks",
            "RebuildEnvironment",
            "RequestEnvironmentInfo",
            "RestartAppServer",
            "RetrieveEnvironmentInfo",
            "SwapEnvironmentCNAMEs",
            "TerminateEnvironment",
            "UpdateApplication",
            "UpdateApplicationVersion",
            "UpdateConfigurationTemplate",
            "UpdateEnvironment",
            "ValidateConfigurationSettings"
        ],
        "ARNFormat": "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>",
        "ARNRegex": "^arn:aws:elasticbeanstalk:.+:.*:.+/.+",
        "HasResource": true,
        "conditionKeys": [
            "elasticbeanstalk:InApplication",
            "elasticbeanstalk:FromApplication",
            "elasticbeanstalk:FromSolutionStack",
            "elasticbeanstalk:FromApplicationVersion",
            "elasticbeanstalk:FromConfigurationTemplate",
            "elasticbeanstalk:FromEnvironment"
        ]
    },
    "Amazon Route 53": {
        "ARNFormat": "arn:aws:route53:::<resource>/<id>",
        "ARNRegex": "^arn:aws:route53:::.+",
        "HasResource": true,
        "StringPrefix": "route53",
        "Actions": [
            "AssociateVPCWithHostedZone",
            "ChangeResourceRecordSets",
            "ChangeTagsForResource",
            "CreateHealthCheck",
            "CreateHostedZone",
            "CreateReusableDelegationSet",
            "DeleteHealthCheck",
            "DeleteHostedZone",
            "DeleteReusableDelegationSet",
            "DisassociateVPCFromHostedZone",
            "GetChange",
            "GetHealthCheck",
            "GetHealthCheckCount",
            "GetHealthCheckLastFailureReason",
            "GetHealthCheckStatus",
            "GetHostedZone",
            "GetReusableDelegationSet",
            "ListHealthChecks",
            "ListHostedZones",
            "ListResourceRecordSets",
            "ListReusableDelegationSets",
            "ListTagsForResource",
            "ListTagsForResources",
            "UpdateHealthCheck"
        ]
    },
    "AWS CloudFormation": {
        "ARNRegex": "^arn:aws:cloudformation:.+:[0-9]+:stack/.+/.+",
        "ARNFormat": "arn:aws:cloudformation:<region>:<account>:stack/<stackName>/<stackId>",
        "HasResource": true,
        "StringPrefix": "cloudformation",
        "Actions": [
            "CancelUpdateStack",
            "CreateStack",
            "CreateUploadBucket",
            "DeleteStack",
            "DescribeStackEvents",
            "DescribeStackResource",
            "DescribeStackResources",
            "DescribeStacks",
            "EstimateTemplateCost",
            "GetStackPolicy",
            "GetTemplate",
            "GetTemplateSummary",
            "ListStacks",
            "ListStackResources",
            "SetStackPolicy",
            "SignalResource",
            "UpdateStack",
            "ValidateTemplate"
        ]
    },
    "AWS CloudHSM": {
        "StringPrefix": "cloudhsm",
        "ARNFormat": "arn:aws:cloudhsm:<region>:<account>:resourceName",
        "ARNRegex": "^arn:aws:cloudhsm:.+:.+:.+",
        "Actions": [
            "CreateLunaClient",
            "CreateHapg",
            "CreateHsm",
            "DeleteLunaClient",
            "DeleteHapg",
            "DeleteHsm",
            "DescribeLunaClient",
            "DescribeHapg",
            "DescribeHsm",
            "GetConfig",
            "ListAvailableZones",
            "ListLunaClients",
            "ListHapgs",
            "ListHsms",
            "ModifyLunaClient",
            "ModifyHapg",
            "ModifyHsm"
        ]
    },
    "Amazon CloudSearch": {
        "StringPrefix": "cloudsearch",
        "ARNFormat": "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:cloudsearch:.+:.+:.+",
        "Actions": [
            "BuildSuggesters",
            "CreateDomain",
            "DefineAnalysisScheme",
            "DefineExpression",
            "DefineIndexField",
            "DefineSuggester",
            "DeleteAnalysisScheme",
            "DeleteDomain",
            "DeleteExpression",
            "DeleteIndexField",
            "DeleteSuggester",
            "DescribeAnalysisSchemes",
            "DescribeAvailabilityOptions",
            "DescribeDomains",
            "DescribeExpressions",
            "DescribeIndexFields",
            "DescribeScalingParameters",
            "DescribeServiceAccessPolicies",
            "DescribeSuggesters",
            "IndexDocuments",
            "ListDomainNames",
            "UpdateAvailabilityOptions",
            "UpdateScalingParameters",
            "UpdateServiceAccessPolicies"
        ]
    },
    "AWS CloudTrail": {
        "StringPrefix": "cloudtrail",
        "ARNFormat": "arn:aws:cloudtrail:<region>:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:cloudtrail:::.+",
        "Actions": [
            "CreateTrail",
            "DeleteTrail",
            "DescribeTrails",
            "GetTrailStatus",
            "LookupEvents",
            "StartLogging",
            "StopLogging",
            "UpdateTrail"
        ]
    },
    "AWS Config": {
        "StringPrefix": "config",
        "Actions": [
            "DeleteDeliveryChannel",
            "DeliverConfigSnapshot",
            "DescribeConfigurationRecorderStatus",
            "DescribeConfigurationRecorders",
            "DescribeDeliveryChannelStatus",
            "DescribeDeliveryChannels",
            "GetResourceConfigHistory",
            "GetResources",
            "GetTagKeys",
            "PutConfigurationRecorder",
            "PutDeliveryChannel",
            "StartConfigurationRecorder",
            "StopConfigurationRecorder"
        ]
    },
    "AWS CodeDeploy": {
        "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier",
        "ARNRegex": "^arn:aws:codedeploy:.+",
        "StringPrefix": "codedeploy",
        "Actions": [
            "AddTagsToOnPremisesInstances",
            "BatchGetApplications",
            "BatchGetDeployments",
            "BatchGetOnPremisesInstances",
            "CreateApplication",
            "CreateDeployment",
            "CreateDeploymentConfig",
            "CreateDeploymentGroup",
            "DeleteApplication",
            "DeleteDeploymentConfig",
            "DeleteDeploymentGroup",
            "DeregisterOnPremisesInstance",
            "GetApplication",
            "GetApplicationRevision",
            "GetDeployment",
            "GetDeploymentConfig",
            "GetDeploymentGroup",
            "GetDeploymentInstance",
            "GetOnPremisesInstance",
            "ListApplicationRevisions",
            "ListApplications",
            "ListDeploymentConfigs",
            "ListDeploymentGroups",
            "ListDeploymentInstances",
            "ListDeployments",
            "ListOnPremisesInstances",
            "RegisterApplicationRevision",
            "RegisterOnPremisesInstance",
            "RemoveTagsFromOnPremisesInstances",
            "StopDeployment",
            "UpdateApplication",
            "UpdateDeploymentGroup"
        ]
    },
    "Amazon Elastic Transcoder": {
        "ARNFormat": "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>",
        "ARNRegex": "^arn:aws:elastictranscoder:.+",
        "StringPrefix": "elastictranscoder",
        "Actions": [
            "CancelJob",
            "CreateJob",
            "CreatePipeline",
            "CreatePreset",
            "DeletePipeline",
            "DeletePreset",
            "ListJobsByPipeline",
            "ListJobsByStatus",
            "ListPipelines",
            "ListPresets",
            "ReadJob",
            "ReadPipeline",
            "ReadPreset",
            "TestRole",
            "UpdatePipeline",
            "UpdatePipelineNotifications",
            "UpdatePipelineStatus"
        ]
    },
    "Amazon CloudWatch": {
        "StringPrefix": "cloudwatch",
        "Actions": [
            "DeleteAlarms",
            "DescribeAlarmHistory",
            "DescribeAlarms",
            "DescribeAlarmsForMetric",
            "DisableAlarmActions",
            "EnableAlarmActions",
            "GetMetricStatistics",
            "ListMetrics",
            "PutMetricAlarm",
            "PutMetricData",
            "SetAlarmState"
        ]
    },
    "AWS Identity and Access Management": {
        "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
        "ARNRegex": "^arn:aws:iam::.+",
        "HasResource": true,
        "StringPrefix": "iam",
        "Actions": [
            "AddRoleToInstanceProfile",
            "AddUserToGroup",
            "AttachGroupPolicy",
            "AttachRolePolicy",
            "AttachUserPolicy",
            "ChangePassword",
            "CreateAccessKey",
            "CreateAccountAlias",
            "CreateGroup",
            "CreateInstanceProfile",
            "CreateLoginProfile",
            "CreatePolicy",
            "CreatePolicyVersion",
            "CreateRole",
            "CreateSAMLProvider",
            "CreateUser",
            "CreateVirtualMFADevice",
            "DeactivateMFADevice",
            "DeleteAccessKey",
            "DeleteAccountAlias",
            "DeleteAccountPasswordPolicy",
            "DeleteGroup",
            "DeleteGroupPolicy",
            "DeleteInstanceProfile",
            "DeleteLoginProfile",
            "DeletePolicy",
            "DeletePolicyVersion",
            "DeleteRole",
            "DeleteRolePolicy",
            "DeleteSAMLProvider",
            "DeleteServerCertificate",
            "DeleteSigningCertificate",
            "DeleteUser",
            "DeleteUserPolicy",
            "DeleteVirtualMFADevice",
            "DetachGroupPolicy",
            "DetachRolePolicy",
            "DetachUserPolicy",
            "EnableMFADevice",
            "GenerateCredentialReport",
            "GetAccessKeyLastUsed",
            "GetAccountPasswordPolicy",
            "GetAccountSummary",
            "GetCredentialReport",
            "GetGroup",
            "GetGroupPolicy",
            "GetInstanceProfile",
            "GetLoginProfile",
            "GetPolicy",
            "GetPolicyVersion",
            "GetRole",
            "GetRolePolicy",
            "GetSAMLProvider",
            "GetServerCertificate",
            "GetUser",
            "GetUserPolicy",
            "ListAccessKeys",
            "ListAccountAliases",
            "ListAttachedGroupPolicies",
            "ListAttachedRolePolicies",
            "ListAttachedUserPolicies",
            "ListEntitiesForPolicy",
            "ListGroupPolicies",
            "ListGroups",
            "ListGroupsForUser",
            "ListInstanceProfiles",
            "ListInstanceProfilesForRole",
            "ListMFADevices",
            "ListPolicies",
            "ListPolicyVersions",
            "ListRolePolicies",
            "ListRoles",
            "ListSAMLProviders",
            "ListServerCertificates",
            "ListSigningCertificates",
            "ListUserPolicies",
            "ListUsers",
            "ListVirtualMFADevices",
            "PassRole",
            "PutGroupPolicy",
            "PutRolePolicy",
            "PutUserPolicy",
            "RemoveRoleFromInstanceProfile",
            "RemoveUserFromGroup",
            "ResyncMFADevice",
            "SetDefaultPolicyVersion",
            "UpdateAccessKey",
            "UpdateAccountPasswordPolicy",
            "UpdateAssumeRolePolicy",
            "UpdateGroup",
            "UpdateLoginProfile",
            "UpdateSAMLProvider",
            "UpdateServerCertificate",
            "UpdateSigningCertificate",
            "UpdateUser",
            "UploadServerCertificate",
            "UploadSigningCertificate"
        ]
    },
    "AWS Import Export": {
        "StringPrefix": "importexport",
        "Actions": [
            "CreateJob",
            "UpdateJob",
            "CancelJob",
            "ListJobs",
            "GetStatus"
        ]
    },
    "Amazon Kinesis": {
        "ARNFormat": "arn:aws:kinesis:us-east-1:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:kinesis:.+",
        "HasResource": true,
        "StringPrefix": "kinesis",
        "Actions": [
            "CreateStream",
            "DeleteStream",
            "DescribeStream",
            "ListStreams",
            "PutRecord",
            "PutRecords",
            "GetShardIterator",
            "GetRecords",
            "MergeShards",
            "SplitShard"
        ]
    },
    "Amazon SimpleDB": {
        "ARNFormat": "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>",
        "ARNRegex": "^arn:aws:sdb:.+",
        "HasResource": true,
        "StringPrefix": "sdb",
        "Actions": [
            "BatchDeleteAttributes",
            "BatchPutAttributes",
            "CreateDomain",
            "DeleteAttributes",
            "DeleteDomain",
            "DomainMetadata",
            "GetAttributes",
            "ListDomains",
            "PutAttributes",
            "Select"
        ]
    },
    "AWS Lambda": {
        "ARNFormat": "arn:aws:lambda:<region>:<account>:function:<functionName>",
        "ARNRegex": "^arn:aws:lambda:.+",
        "StringPrefix": "lambda",
        "HasResource": true,
        "Actions": [
            "AddPermission",
            "CreateEventSourceMapping",
            "CreateFunction",
            "DeleteEventSourceMapping",
            "DeleteFunction",
            "GetEventSourceMapping",
            "GetFunction",
            "GetFunctionConfiguration",
            "GetPolicy",
            "InvokeFunction",
            "ListEventSourceMappings",
            "ListFunctions",
            "RemovePermission",
            "UpdateEventSourceMapping",
            "UpdateFunctionCode",
            "UpdateFunctionConfiguration"
        ]
    },
    "Amazon Simple Workflow Service": {
        "ARNFormat": "arn:aws:swf:<region>:<account>:/<domain>/<domainName>",
        "ARNRegex": "^arn:aws:swf:.+",
        "StringPrefix": "swf",
        "Actions": [
            "CancelTimer",
            "CancelWorkflowExecution",
            "CompleteWorkflowExecution",
            "ContinueAsNewWorkflowExecution",
            "CountClosedWorkflowExecutions",
            "CountOpenWorkflowExecutions",
            "CountPendingActivityTasks",
            "CountPendingDecisionTasks",
            "DeprecateActivityType",
            "DeprecateDomain",
            "DeprecateWorkflowType",
            "DescribeActivityType",
            "DescribeDomain",
            "DescribeWorkflowExecution",
            "DescribeWorkflowType",
            "FailWorkflowExecution",
            "GetWorkflowExecutionHistory",
            "ListActivityTypes",
            "ListClosedWorkflowExecutions",
            "ListDomains",
            "ListOpenWorkflowExecutions",
            "ListWorkflowTypes",
            "PollForActivityTask",
            "PollForDecisionTask",
            "RecordActivityTaskHeartbeat",
            "RecordMarker",
            "RegisterActivityType",
            "RegisterDomain",
            "RegisterWorkflowType",
            "RequestCancelActivityTask",
            "RequestCancelExternalWorkflowExecution",
            "RequestCancelWorkflowExecution",
            "RespondActivityTaskCanceled",
            "RespondActivityTaskCompleted",
            "RespondActivityTaskFailed",
            "RespondDecisionTaskCompleted",
            "ScheduleActivityTask",
            "SignalExternalWorkflowExecution",
            "SignalWorkflowExecution",
            "StartChildWorkflowExecution",
            "StartTimer",
            "StartWorkflowExecution",
            "TerminateWorkflowExecution"
        ],
        "conditionKeys": [
            "swf:activityType.name",
            "swf:activityType.version",
            "swf:defaultTaskList.name",
            "swf:name",
            "swf:tagFilter.tag",
            "swf:taskList.name",
            "swf:typeFilter.name",
            "swf:typeFilter.version",
            "swf:version",
            "swf:workflowType.name",
            "swf:workflowType.version",
            "swf:workflowTypeVersion"
        ]
    },
    "Amazon Storage Gateway": {
        "ARNFormat": "arn:aws:storagegateway:us-east-1:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:storagegateway:.+",
        "StringPrefix": "storagegateway",
        "Actions": [
            "ActivateGateway",
            "AddCache",
            "AddUploadBuffer",
            "AddWorkingStorage",
            "CancelArchival",
            "CancelRetrieval",
            "CreateCachediSCSIVolume",
            "CreateSnapshot",
            "CreateSnapshotFromVolumeRecoveryPoint",
            "CreateStorediSCSIVolume",
            "CreateTapes",
            "DeleteBandwidthRateLimit",
            "DeleteChapCredentials",
            "DeleteGateway",
            "DeleteSnapshotSchedule",
            "DeleteTape",
            "DeleteTapeArchive",
            "DeleteVolume",
            "DescribeBandwidthRateLimit",
            "DescribeCache",
            "DescribeCachediSCSIVolumes",
            "DescribeChapCredentials",
            "DescribeGatewayInformation",
            "DescribeMaintenanceStartTime",
            "DescribeSnapshotSchedule",
            "DescribeStorediSCSIVolumes",
            "DescribeTapeArchives",
            "DescribeTapeRecoveryPoints",
            "DescribeTapes",
            "DescribeUploadBuffer",
            "DescribeVTLDevices",
            "DescribeWorkingStorage",
            "DisableGateway",
            "ListGateways",
            "ListLocalDisks",
            "ListVolumeRecoveryPoints",
            "ListVolumes",
            "RetrieveTapeArchive",
            "RetrieveTapeRecoveryPoint",
            "ShutdownGateway",
            "StartGateway",
            "UpdateBandwidthRateLimit",
            "UpdateChapCredentials",
            "UpdateGatewayInformation",
            "UpdateGatewaySoftwareNow",
            "UpdateMaintenanceStartTime",
            "UpdateSnapshotSchedule"
        ]
    },
    "Amazon SQS": {
        "ARNFormat": "arn:aws:sqs:<region>:<account_ID>:<queue_name>",
        "ARNRegex": "^arn:aws:sqs:.+",
        "HasResource": true,
        "StringPrefix": "sqs",
        "Actions": [
            "AddPermission",
            "ChangeMessageVisibility",
            "CreateQueue",
            "DeleteMessage",
            "DeleteQueue",
            "GetQueueAttributes",
            "GetQueueUrl",
            "ListQueues",
            "PurgeQueue",
            "ReceiveMessage",
            "RemovePermission",
            "SendMessage",
            "SetQueueAttributes"
        ]
    },
    "Amazon SES": {
        "StringPrefix": "ses",
        "Actions": [
            "DeleteIdentity",
            "DeleteVerifiedEmailAddress",
            "GetIdentityDkimAttributes",
            "GetIdentityNotificationAttributes",
            "GetIdentityVerificationAttributes",
            "GetSendQuota",
            "GetSendStatistics",
            "ListIdentities",
            "ListVerifiedEmailAddresses",
            "SendEmail",
            "SendRawEmail",
            "SetIdentityDkimEnabled",
            "SetIdentityNotificationTopic",
            "SetIdentityFeedbackForwardingEnabled",
            "VerifyDomainDkim",
            "VerifyDomainIdentity",
            "VerifyEmailAddress",
            "VerifyEmailIdentity"
        ]
    },
    "Amazon Redshift": {
        "StringPrefix": "redshift",
        "Actions": [
            "AuthorizeClusterSecurityGroupIngress",
            "AuthorizeSnapshotAccess",
            "CancelQuerySession",
            "CopyClusterSnapshot",
            "CreateCluster",
            "CreateClusterParameterGroup",
            "CreateClusterSecurityGroup",
            "CreateClusterSnapshot",
            "CreateClusterSubnetGroup",
            "CreateEventSubscription",
            "CreateHsmClientCertificate",
            "CreateHsmConfiguration",
            "CreateTags",
            "DeleteCluster",
            "DeleteClusterParameterGroup",
            "DeleteClusterSecurityGroup",
            "DeleteClusterSnapshot",
            "DeleteClusterSubnetGroup",
            "DeleteEventSubscription",
            "DeleteHsmClientCertificate",
            "DeleteHsmConfiguration",
            "DeleteTags",
            "DescribeClusterParameterGroups",
            "DescribeClusterParameters",
            "DescribeClusterSecurityGroups",
            "DescribeClusterSnapshots",
            "DescribeClusterSubnetGroups",
            "DescribeClusterVersions",
            "DescribeClusters",
            "DescribeDefaultClusterParameters",
            "DescribeEventCategories",
            "DescribeEventSubscriptions",
            "DescribeEvents",
            "DescribeHsmClientCertificates",
            "DescribeHsmConfigurations",
            "DescribeLoggingStatus",
            "DescribeOrderableClusterOptions",
            "DescribeReservedNodeOfferings",
            "DescribeReservedNodes",
            "DescribeResize",
            "DescribeTags",
            "DisableLogging",
            "DisableSnapshotCopy",
            "EnableLogging",
            "EnableSnapshotCopy",
            "ModifyCluster",
            "ModifyClusterParameterGroup",
            "ModifyClusterSubnetGroup",
            "ModifyEventSubscription",
            "ModifySnapshotCopyRetentionPeriod",
            "PurchaseReservedNodeOffering",
            "RebootCluster",
            "ResetClusterParameterGroup",
            "RestoreFromClusterSnapshot",
            "RevokeClusterSecurityGroupIngress",
            "RevokeSnapshotAccess",
            "RotateEncryptionKey",
            "ViewQueriesInConsole"
        ]
    },
    "Amazon RDS": {
        "ARNRegex": "^arn:aws:rds:.+",
        "StringPrefix": "rds",
        "Actions": [
            "AddTagsToResource",
            "AddSourceIdentifierToSubscription",
            "ApplyPendingMaintenanceAction",
            "AuthorizeDBSecurityGroupIngress",
            "CopyDBParameterGroup",
            "CopyDBSnapshot",
            "CopyOptionGroup",
            "CreateDBInstance",
            "CreateDBInstanceReadReplica",
            "CreateDBParameterGroup",
            "CreateDBSecurityGroup",
            "CreateDBSnapshot",
            "CreateDBSubnetGroup",
            "CreateEventSubscription",
            "CreateOptionGroup",
            "DeleteDBInstance",
            "DeleteDBParameterGroup",
            "DeleteDBSecurityGroup",
            "DeleteDBSnapshot",
            "DeleteDBSubnetGroup",
            "DeleteEventSubscription",
            "DeleteOptionGroup",
            "DescribeEngineDefaultParameters",
            "DescribeDBInstances",
            "DescribeDBLogFiles",
            "DescribeDBParameterGroups",
            "DescribeDBParameters",
            "DescribeDBSecurityGroups",
            "DescribeDBSnapshots",
            "DescribeDBEngineVersions",
            "DescribeDBSubnetGroups",
            "DescribeEventCategories",
            "DescribeEvents",
            "DescribeEventSubscriptions",
            "DescribeOptionGroups",
            "DescribeOptionGroupOptions",
            "DescribeOrderableDBInstanceOptions",
            "DescribePendingMaintenanceActions",
            "DescribeReservedDBInstances",
            "DescribeReservedDBInstancesOfferings",
            "DownloadDBLogFilePortion",
            "ListTagsForResource",
            "ModifyDBInstance",
            "ModifyDBParameterGroup",
            "ModifyDBSubnetGroup",
            "ModifyEventSubscription",
            "ModifyOptionGroup",
            "PromoteReadReplica",
            "PurchaseReservedDBInstancesOffering",
            "RebootDBInstance",
            "RemoveSourceIdentifierFromSubscription",
            "RemoveTagsFromResource",
            "RestoreDBInstanceFromDBSnapshot",
            "RestoreDBInstanceToPointInTime",
            "ResetDBParameterGroup",
            "RevokeDBSecurityGroupIngress"
        ],
        "conditionKeys": [
            "rds:DatabaseClass",
            "rds:DatabaseEngine",
            "rds:DatabaseName",
            "rds:MultiAz",
            "rds:Piops",
            "rds:StorageSize",
            "rds:Vpc",
            "rds:db-tag",
            "rds:es-tag",
            "rds:og-tag",
            "rds:pg-tag",
            "rds:req-tag",
            "rds:secgrp-tag",
            "rds:snapshot-tag",
            "rds:subgrp-tag"
        ]
    },
    "Amazon Elastic MapReduce": {
        "StringPrefix": "elasticmapreduce",
        "Actions": [
            "AddInstanceGroups",
            "AddTags",
            "AddJobFlowSteps",
            "DescribeCluster",
            "DescribeJobFlows",
            "DescribeStep",
            "ListBootstrapActions",
            "ListClusters",
            "ListInstanceGroups",
            "ListInstances",
            "ListSteps",
            "ModifyInstanceGroups",
            "RemoveTags",
            "RunJobFlow",
            "SetTerminationProtection",
            "TerminateJobFlows"
        ]
    },
    "Amazon SNS": {
        "ARNFormat": "arn:aws:sns:<region>:<account_ID>:<topic_name>",
        "ARNRegex": "^arn:aws:sns:.+",
        "HasResource": true,
        "conditionKeys": [
            "aws:SourceArn",
            "sns:Endpoint",
            "sns:Protocol"
        ],
        "StringPrefix": "sns",
        "Actions": [
            "AddPermission",
            "ConfirmSubscription",
            "CreatePlatformApplication",
            "CreatePlatformEndpoint",
            "CreateTopic",
            "DeleteEndpoint",
            "DeletePlatformApplication",
            "DeleteTopic",
            "GetEndpointAttributes",
            "GetPlatformApplicationAttributes",
            "GetSubscriptionAttributes",
            "GetTopicAttributes",
            "ListEndpointsByPlatformApplication",
            "ListPlatformApplications",
            "ListSubscriptions",
            "ListSubscriptionsByTopic",
            "ListTopics",
            "Publish",
            "RemovePermission",
            "SetEndpointAttributes",
            "SetPlatformApplicationAttributes",
            "SetSubscriptionAttributes",
            "SetTopicAttributes",
            "Subscribe",
            "Unsubscribe"
        ]
    },
    "Amazon S3": {
        "ARNFormat": "arn:aws:s3:::<bucket_name>/<key_name>",
        "ARNRegex": "^arn:aws:s3:::.+",
        "HasResource": true,
        "conditionKeys": [
            "s3:x-amz-acl",
            "s3:x-amz-copy-source",
            "s3:x-amz-metadata-directive",
            "s3:VersionId",
            "s3:LocationConstraint",
            "s3:delimiter",
            "s3:max-keys",
            "s3:prefix"
        ],
        "StringPrefix": "s3",
        "Actions": [
            "AbortMultipartUpload",
            "CreateBucket",
            "DeleteBucket",
            "DeleteBucketPolicy",
            "DeleteBucketWebsite",
            "DeleteObject",
            "DeleteObjectVersion",
            "GetBucketAcl",
            "GetBucketCORS",
            "GetBucketLocation",
            "GetBucketLogging",
            "GetBucketNotification",
            "GetBucketPolicy",
            "GetBucketRequestPayment",
            "GetBucketTagging",
            "GetBucketVersioning",
            "GetBucketWebsite",
            "GetLifecycleConfiguration",
            "GetObject",
            "GetObjectAcl",
            "GetObjectTorrent",
            "GetObjectVersion",
            "GetObjectVersionAcl",
            "GetObjectVersionTorrent",
            "ListAllMyBuckets",
            "ListBucket",
            "ListBucketMultipartUploads",
            "ListBucketVersions",
            "ListMultipartUploadParts",
            "PutBucketAcl",
            "PutBucketCORS",
            "PutBucketLogging",
            "PutBucketNotification",
            "PutBucketPolicy",
            "PutBucketRequestPayment",
            "PutBucketTagging",
            "PutBucketVersioning",
            "PutBucketWebsite",
            "PutLifecycleConfiguration",
            "PutObject",
            "PutObjectAcl",
            "PutObjectVersionAcl",
            "RestoreObject"
        ]
    },
    "Amazon EC2": {
        "ARNRegex": "^arn:aws:ec2:.+",
        "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>",
        "HasResource": true,
        "StringPrefix": "ec2",
        "Actions": [
            "AcceptVpcPeeringConnection",
            "ActivateLicense",
            "AllocateAddress",
            "AssignPrivateIpAddresses",
            "AssociateAddress",
            "AssociateDhcpOptions",
            "AssociateRouteTable",
            "AttachClassicLinkVpc",
            "AttachInternetGateway",
            "AttachNetworkInterface",
            "AttachVolume",
            "AttachVpnGateway",
            "AuthorizeSecurityGroupEgress",
            "AuthorizeSecurityGroupIngress",
            "BundleInstance",
            "CancelBundleTask",
            "CancelConversionTask",
            "CancelExportTask",
            "CancelReservedInstancesListing",
            "CancelSpotInstanceRequests",
            "ConfirmProductInstance",
            "CopyImage",
            "CopySnapshot",
            "CreateCustomerGateway",
            "CreateDhcpOptions",
            "CreateImage",
            "CreateInstanceExportTask",
            "CreateInternetGateway",
            "CreateKeyPair",
            "CreateNetworkAcl",
            "CreateNetworkAclEntry",
            "CreateNetworkInterface",
            "CreatePlacementGroup",
            "CreateReservedInstancesListing",
            "CreateRoute",
            "CreateRouteTable",
            "CreateSecurityGroup",
            "CreateSnapshot",
            "CreateSpotDatafeedSubscription",
            "CreateSubnet",
            "CreateTags",
            "CreateVolume",
            "CreateVpc",
            "CreateVpcEndpoint",
            "CreateVpcPeeringConnection",
            "CreateVpnConnection",
            "CreateVpnConnectionRoute",
            "CreateVpnGateway",
            "DeactivateLicense",
            "DeleteCustomerGateway",
            "DeleteDhcpOptions",
            "DeleteInternetGateway",
            "DeleteKeyPair",
            "DeleteNetworkAcl",
            "DeleteNetworkAclEntry",
            "DeleteNetworkInterface",
            "DeletePlacementGroup",
            "DeleteRoute",
            "DeleteRouteTable",
            "DeleteSecurityGroup",
            "DeleteSnapshot",
            "DeleteSpotDatafeedSubscription",
            "DeleteSubnet",
            "DeleteTags",
            "DeleteVolume",
            "DeleteVpc",
            "DeleteVpcEndpoints",
            "DeleteVpcPeeringConnection",
            "DeleteVpnConnection",
            "DeleteVpnConnectionRoute",
            "DeleteVpnGateway",
            "DeregisterImage",
            "DescribeAccountAttributes",
            "DescribeAddresses",
            "DescribeAvailabilityZones",
            "DescribeBundleTasks",
            "DescribeClassicLinkInstances",
            "DescribeConversionTasks",
            "DescribeCustomerGateways",
            "DescribeDhcpOptions",
            "DescribeExportTasks",
            "DescribeImageAttribute",
            "DescribeImages",
            "DescribeInstanceAttribute",
            "DescribeInstanceStatus",
            "DescribeInstances",
            "DescribeInternetGateways",
            "DescribeKeyPairs",
            "DescribeLicenses",
            "DescribeNetworkAcls",
            "DescribeNetworkInterfaceAttribute",
            "DescribeNetworkInterfaces",
            "DescribePlacementGroups",
            "DescribePrefixLists",
            "DescribeRegions",
            "DescribeReservedInstances",
            "DescribeReservedInstancesListings",
            "DescribeReservedInstancesModifications",
            "DescribeReservedInstancesOfferings",
            "DescribeRouteTables",
            "DescribeSecurityGroups",
            "DescribeSnapshotAttribute",
            "DescribeSnapshots",
            "DescribeSpotDatafeedSubscription",
            "DescribeSpotInstanceRequests",
            "DescribeSpotPriceHistory",
            "DescribeSubnets",
            "DescribeTags",
            "DescribeVolumeAttribute",
            "DescribeVolumeStatus",
            "DescribeVolumes",
            "DescribeVpcAttribute",
            "DescribeVpcClassicLink",
            "DescribeVpcEndpoints",
            "DescribeVpcEndpointServices",
            "DescribeVpcs",
            "DescribeVpcPeeringConnections",
            "DescribeVpnConnections",
            "DescribeVpnGateways",
            "DetachClassicLinkVpc",
            "DetachInternetGateway",
            "DetachNetworkInterface",
            "DetachVolume",
            "DetachVpnGateway",
            "DisableVgwRoutePropagation",
            "DisableVpcClassicLink",
            "DisassociateAddress",
            "DisassociateRouteTable",
            "EnableVgwRoutePropagation",
            "EnableVolumeIO",
            "EnableVpcClassicLink",
            "GetConsoleOutput",
            "GetPasswordData",
            "ImportInstance",
            "ImportKeyPair",
            "ImportVolume",
            "ModifyImageAttribute",
            "ModifyInstanceAttribute",
            "ModifyNetworkInterfaceAttribute",
            "ModifyReservedInstances",
            "ModifySnapshotAttribute",
            "ModifySubnetAttribute",
            "ModifyVolumeAttribute",
            "ModifyVpcAttribute",
            "ModifyVpcEndpoint",
            "MonitorInstances",
            "PurchaseReservedInstancesOffering",
            "RebootInstances",
            "RegisterImage",
            "RejectVpcPeeringConnection",
            "ReleaseAddress",
            "ReplaceNetworkAclAssociation",
            "ReplaceNetworkAclEntry",
            "ReplaceRoute",
            "ReplaceRouteTableAssociation",
            "ReportInstanceStatus",
            "RequestSpotInstances",
            "ResetImageAttribute",
            "ResetInstanceAttribute",
            "ResetNetworkInterfaceAttribute",
            "ResetSnapshotAttribute",
            "RevokeSecurityGroupEgress",
            "RevokeSecurityGroupIngress",
            "RunInstances",
            "StartInstances",
            "StopInstances",
            "TerminateInstances",
            "UnassignPrivateIpAddresses",
            "UnmonitorInstances"
        ],
        "conditionKeys": [
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ParentSnapshot",
            "ec2:PlacementGroup",
            "ec2:Region",
            "ec2:ResourceTag",
            "ec2:RootDeviceType",
            "ec2:Tenancy",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeType"
        ]
    },
    "Amazon DynamoDB": {
        "ARNFormat": "arn:aws:dynamodb:<region>:<accountID>:table/<tablename>",
        "ARNRegex": "^arn:aws:dynamodb:.+:.+:.+",
        "HasResource": true,
        "StringPrefix": "dynamodb",
        "Actions": [
            "BatchGetItem",
            "BatchWriteItem",
            "CreateTable",
            "DeleteItem",
            "DeleteTable",
            "DescribeStream",
            "DescribeTable",
            "GetItem",
            "GetRecords",
            "GetShardIterator",
            "ListStreams",
            "ListTables",
            "PutItem",
            "Query",
            "Scan",
            "UpdateItem",
            "UpdateTable"
        ],
        "conditionKeys": [
            "dynamodb:Attributes",
            "dynamodb:ReturnValues",
            "dynamodb:ReturnConsumedCapacity",
            "dynamodb:Select",
            "dynamodb:LeadingKeys"
        ]
    },
    "Amazon Glacier": {
        "HasResource": true,
        "ARNFormat": "arn:aws:glacier:<region>:<accountID>:<relative-id>",
        "ARNRegex": "^arn:aws:glacier:.+:.+:.+",
        "StringPrefix": "glacier",
        "Actions": [
            "AbortMultipartUpload",
            "CompleteMultipartUpload",
            "CreateVault",
            "DeleteArchive",
            "DeleteVault",
            "DeleteVaultNotifications",
            "DescribeJob",
            "DescribeVault",
            "GetJobOutput",
            "GetVaultNotifications",
            "InitiateMultipartUpload",
            "InitiateJob",
            "ListJobs",
            "ListMultipartUploads",
            "ListParts",
            "ListVaults",
            "SetVaultNotifications",
            "UploadArchive",
            "UploadMultipartPart"
        ]
    },
    "Amazon CloudFront": {
        "StringPrefix": "cloudfront",
        "Actions": [
            "CreateCloudFrontOriginAccessIdentity",
            "CreateDistribution",
            "CreateInvalidation",
            "CreateStreamingDistribution",
            "DeleteCloudFrontOriginAccessIdentity",
            "DeleteDistribution",
            "DeleteStreamingDistribution",
            "GetCloudFrontOriginAccessIdentity",
            "GetCloudFrontOriginAccessIdentityConfig",
            "GetDistribution",
            "GetDistributionConfig",
            "GetInvalidation",
            "GetStreamingDistribution",
            "GetStreamingDistributionConfig",
            "ListCloudFrontOriginAccessIdentities",
            "ListDistributions",
            "ListInvalidations",
            "ListStreamingDistributions",
            "UpdateCloudFrontOriginAccessIdentity",
            "UpdateDistribution",
            "UpdateStreamingDistribution"
        ]
    },
    "AWS Security Token Service": {
        "ARNFormat": "arn:aws:<sts/iam>::<namespace>:<relative-id>",
        "ARNRegex": "^arn:aws:(sts|iam)::.+",
        "HasResource": true,
        "StringPrefix": "sts",
        "Actions": [
            "AssumeRole",
            "DecodeAuthorizationMessage",
            "GetFederationToken"
        ]
    },
    "Amazon Zocalo": {
        "StringPrefix": "zocalo",
        "Actions": [
            "ActivateUser",
            "AddUserToGroup",
            "CheckAlias",
            "CreateInstance",
            "DeactivateUser",
            "DeleteInstance",
            "DeregisterDirectory",
            "DescribeAvailableDirectories",
            "DescribeInstances",
            "RegisterDirectory",
            "RemoveUserFromGroup",
            "UpdateInstanceAlias"
        ]
    },
    "AWS Directory Service": {
        "ARNFormat": "arn:aws:ds:<region>:<account_ID>:<directory-id>",
        "ARNRegex": "^arn:aws:ds:.+:.+:.+",
        "HasResource": true,
        "StringPrefix": "ds",
        "Actions": [
            "CreateDirectory",
            "CreateSnapshot",
            "CheckAlias",
            "ConnectDirectory",
            "DeleteDirectory",
            "DeleteSnapshot",
            "DescribeDirectories",
            "DescribeSnapshots",
            "GetDirectoryLimits",
            "GetSnapshotLimits",
            "ListAuthorizedApplications",
            "RepairDirectory",
            "RestoreFromSnapshot",
            "UpdateDirectory"
        ]
    },
    "AWS ElastiCache": {
        "StringPrefix": "elasticache",
        "Actions": [
            "AuthorizeCacheSecurityGroupIngress",
            "CopySnapshot",
            "CreateCacheCluster",
            "CreateCacheParameterGroup",
            "CreateCacheSecurityGroup",
            "CreateCacheSubnetGroup",
            "CreateSnapshot",
            "DeleteCacheCluster",
            "DeleteCacheParameterGroup",
            "DeleteCacheSecurityGroup",
            "DeleteCacheSubnetGroup",
            "DeleteReplicationGroup",
            "DeleteSnapshot",
            "DescribeCacheClusters",
            "DescribeCacheEngineVersions",
            "DescribeCacheParameterGroups",
            "DescribeCacheParameters",
            "DescribeCacheSecurityGroups",
            "DescribeCacheSubnetGroups",
            "DescribeEngineDefaultParameters",
            "DescribeEvents",
            "DescribeReplicationGroups",
            "DescribeReservedCacheNodes",
            "DescribeReservedCacheNodesOfferings",
            "DescribeSnapshots",
            "ModifyCacheCluster",
            "ModifyCacheParameterGroup",
            "ModifyCacheSubnetGroup",
            "ModifyReplicationGroup",
            "PurchaseReservedCacheNodesOffering",
            "RebootCacheCluster",
            "ResetCacheParameterGroup",
            "RevokeCacheSecurityGroupIngress"
        ]
    },
    "Amazon CloudWatch Logs": {
        "StringPrefix": "logs",
        "ARNRegex": "^arn:aws:logs:.+",
        "ARNFormat": "arn:aws:logs:.+:.+:.+",
        "Actions": [
            "CreateLogGroup",
            "CreateLogStream",
            "DeleteLogGroup",
            "DeleteLogStream",
            "DeleteMetricFilter",
            "DeleteRetentionPolicy",
            "DescribeLogGroups",
            "DescribeLogStreams",
            "DescribeMetricFilters",
            "GetLogEvents",
            "PutLogEvents",
            "PutMetricFilter",
            "PutRetentionPolicy",
            "TestMetricFilter"
        ]
    },
    "Amazon Cognito Identity": {
        "StringPrefix": "cognito-identity",
        "ARNRegex": "^arn:aws:cognito-identity:.+",
        "ARNFormat": "arn:aws:cognito-identy:<region>:<account>:<resourceType>/<resourcePath>",
        "Actions": [
            "CreateIdentityPool",
            "DeleteIdentityPool",
            "DescribeIdentity",
            "DescribeIdentityPool",
            "GetIdentityPoolRoles",
            "GetOpenIdTokenForDeveloperIdentity",
            "ListIdentities",
            "ListIdentityPools",
            "LookupDeveloperIdentity",
            "MergeDeveloperIdentities",
            "SetIdentityPoolRoles",
            "UnlinkDeveloperIdentity",
            "UpdateIdentityPool"
        ]
    },
    "Amazon Cognito Sync": {
        "StringPrefix": "cognito-sync",
        "ARNRegex": "^arn:aws:cognito-sync:.+",
        "ARNFormat": "arn:aws:ec2:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:",
        "Actions": [
            "BulkPublish",
            "DeleteDataset",
            "DescribeDataset",
            "DescribeIdentityUsage",
            "DescribeIdentityPoolUsage",
            "GetBulkPublishDetails",
            "GetCognitoEvents",
            "GetIdentityPoolConfiguration",
            "ListDatasets",
            "ListIdentityPoolUsage",
            "ListRecords",
            "RegisterDevice",
            "SetCognitoEvents",
            "SetIdentityPoolConfiguration",
            "SubscribeToDataset",
            "UpdateRecords",
            "UnsubscribeFromDataset"
        ]
    },
    "Amazon Mobile Analytics": {
        "ARNFormat": "arn:aws:mobileanalytics:<region>:<account_id>:<app_title>",
        "ARNRegex": "^arn:aws:mobileanalytics:.+",
        "StringPrefix": "mobileanalytics",
        "Actions": [
            "PutEvents",
            "GetReports",
            "GetFinancialReports"
        ]
    },
    "Amazon Route53 Domains": {
        "StringPrefix": "route53domains",
        "Actions": [
            "CheckDomainAvailability",
            "DeleteDomain",
            "DeleteTagsForDomain",
            "DisableDomainTransferLock",
            "EnableDomainTransferLock",
            "GetDomainDetail",
            "GetOperationDetail",
            "ListDomains",
            "ListOperations",
            "ListTagsForDomain",
            "RegisterDomain",
            "RetrieveDomainAuthCode",
            "TransferDomain",
            "UpdateDomainContact",
            "UpdateDomainContactPrivacy",
            "UpdateDomainNameservers",
            "UpdateTagsForDomain"
        ]
    },
    "AWS Key Management Service": {
        "StringPrefix": "kms",
        "Actions": [
            "CreateAlias",
            "CreateGrant",
            "CreateKey",
            "Decrypt",
            "DeleteAlias",
            "DescribeKey",
            "DisableKey",
            "DisableKeyRotation",
            "EnableKey",
            "EnableKeyRotation",
            "Encrypt",
            "GenerateRandom",
            "GenerateDataKey",
            "GenerateDataKeyWithoutPlaintext",
            "GetKeyPolicy",
            "GetKeyRotationStatus",
            "List*",
            "PutKeyPolicy",
            "ReEncrypt*",
            "RetireGrant",
            "RevokeGrant",
            "UpdateKeyDescription"
        ]
    },
    "AWS Billing": {
        "StringPrefix": "aws-portal",
        "Actions": [
            "ModifyAccount",
            "ModifyBilling",
            "ModifyPaymentMethods",
            "ViewAccount",
            "ViewBilling",
            "ViewPaymentMethods",
            "ViewUsage"
        ]
    },
    "AWS Direct Connect": {
        "StringPrefix": "directconnect",
        "Actions": [
            "AllocateConnectionOnInterconnect",
            "AllocatePrivateVirtualInterface",
            "AllocatePublicVirtualInterface",
            "ConfirmConnection",
            "ConfirmPrivateVirtualInterface",
            "ConfirmPublicVirtualInterface",
            "CreateConnection",
            "CreateInterconnect",
            "CreatePrivateVirtualInterface",
            "CreatePublicVirtualInterface",
            "DeleteConnection",
            "DeleteInterconnect",
            "DeleteVirtualInterface",
            "DescribeConnections",
            "DescribeConnectionsOnInterconnect",
            "DescribeInterconnects",
            "DescribeLocations",
            "DescribeVirtualGateways",
            "DescribeVirtualInterfaces"
        ]
    },
    "AWS Marketplace": {
        "StringPrefix": "aws-marketplace",
        "Actions": [
            "Subscribe",
            "Unsubscribe",
            "ViewSubscriptions"
        ]
    },
    "AWS Marketplace Management Portal": {
        "StringPrefix": "aws-marketplace-management",
        "Actions": [
            "uploadFiles",
            "viewMarketing",
            "viewReports",
            "viewSupport"
        ]
    },
    "AWS Trusted Advisor": {
        "StringPrefix": "trustedadvisor",
        "ARNRegex": "arn:aws:trustedadvisor:*",
        "ARNFormat": "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}",
        "Actions": [
            "DescribeCheckItems",
            "DescribeCheckRefreshStatuses",
            "DescribeCheckStatusHistoryChanges",
            "DescribeCheckSummaries",
            "DescribeNotificationPreferences",
            "ExcludeCheckItems",
            "IncludeCheckItems",
            "RefreshCheck",
            "UpdateNotificationPreferences"
        ]
    },
    "AWS OpsWorks": {
        "StringPrefix": "opsworks",
        "ARNRegex": "^arn:aws:opsworks:.+",
        "ARNFormat": "arn:aws:opsworks:<region>:<account>:<resourceType>/<resourcePath>",
        "Actions": [
            "AssignVolume",
            "AssociateElasticIp",
            "AttachElasticLoadBalancer",
            "CloneStack",
            "CreateApp",
            "CreateDeployment",
            "CreateInstance",
            "CreateLayer",
            "CreateStack",
            "CreateUserProfile",
            "DeleteApp",
            "DeleteInstance",
            "DeleteLayer",
            "DeleteStack",
            "DeleteUserProfile",
            "DeregisterElasticIp",
            "DeregisterVolume",
            "DescribeApps",
            "DescribeCommands",
            "DescribeDeployments",
            "DescribeElasticIps",
            "DescribeElasticLoadBalancers",
            "DescribeInstances",
            "DescribeLayers",
            "DescribeLoadBasedAutoScaling",
            "DescribePermissions",
            "DescribeRaidArrays",
            "DescribeServiceErrors",
            "DescribeStacks",
            "DescribeTimeBasedAutoScaling",
            "DescribeUserProfiles",
            "DescribeVolumes",
            "DetachElasticLoadBalancer",
            "DisassociateElasticIp",
            "GetHostnameSuggestion",
            "RebootInstance",
            "RegisterElasticIp",
            "RegisterVolume",
            "SetLoadBasedAutoScaling",
            "SetPermission",
            "SetTimeBasedAutoScaling",
            "StartInstance",
            "StartStack",
            "StopInstance",
            "StopStack",
            "UnassignVolume",
            "UpdateApp",
            "UpdateElasticIp",
            "UpdateInstance",
            "UpdateLayer",
            "UpdateStack",
            "UpdateUserProfile",
            "UpdateVolume"
        ]
    },
    "Amazon WorkMail": {
        "StringPrefix": "workmail",
        "Actions": [
            "AddMembersToGroup",
            "CreateGroup",
            "CreateMailDomain",
            "CreateMailUser",
            "CreateOrganization",
            "DeleteOrganization",
            "DeleteMailDomain",
            "DeleteMobileDevice",
            "DescribeDirectories",
            "DescribeKmsKeys",
            "DescribeOrganizations",
            "DescribeMailDomains",
            "DescribeMailGroups",
            "DescribeMailUsers",
            "DisableMailGroups",
            "DisableMailUsers",
            "EnableMailDomain",
            "EnableMailUsers",
            "EnableMailGroups",
            "GetMailDomainDetails",
            "GetMailGroupDetails",
            "GetMailUserDetails",
            "GetMobileDeviceDetails",
            "GetMobileDevicesForUser",
            "GetMobilePolicyDetails",
            "ListMembersInMailGroup",
            "RemoveMembersFromGroup",
            "ResetUserPassword",
            "SearchMembers",
            "SetAdmin",
            "SetDefaultMailDomain",
            "SetMailGroupDetails",
            "SetMailUserDetails",
            "SetMobilePolicyDetails",
            "WipeMobileDevice"
        ]
    },
    "Amazon EC2 Container Service": {
        "StringPrefix": "ecs",
        "ARNRegex": "^arn:aws:ecs:.+",
        "ARNFormat": "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>",
        "HasResource": true,
        "Actions": [
            "CreateCluster",
            "DeleteCluster",
            "DeregisterContainerInstance",
            "DeregisterTaskDefinition",
            "DescribeClusters",
            "DescribeContainerInstances",
            "DescribeTaskDefinition",
            "DescribeTasks",
            "DiscoverPollEndpoint",
            "ListClusters",
            "ListContainerInstances",
            "ListTaskDefinitions",
            "ListTasks",
            "Poll",
            "RegisterContainerInstance",
            "RegisterTaskDefinition",
            "RunTask",
            "StartTask",
            "StopTask",
            "SubmitContainerStateChange",
            "SubmitTaskStateChange"
        ],
        "conditionKeys": [
            "ecs:cluster",
            "ecs:container-instances"
        ]
    },
    "Amazon Machine Learning": {
        "StringPrefix": "machinelearning",
        "ARNRegex": "^arn:aws:machinelearning:.+",
        "ARNFormat": "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>",
        "HasResource": true,
        "Actions": [
            "CreateBatchPrediction",
            "CreateDataSourceFromRDS",
            "CreateDataSourceFromRedshift",
            "CreateDataSourceFromS3",
            "CreateEvaluation",
            "CreateMLModel",
            "CreateRealtimeEndpoint",
            "DeleteBatchPrediction",
            "DeleteDataSource",
            "DeleteEvaluation",
            "DeleteMLModel",
            "DeleteRealtimeEndpoint",
            "DescribeBatchPredictions",
            "DescribeDataSources",
            "DescribeEvaluations",
            "DescribeMLModels",
            "GetBatchPrediction",
            "GetDataSource",
            "GetEvaluation",
            "GetMLModel",
            "Predict",
            "UpdateBatchPrediction",
            "UpdateDataSource",
            "UpdateEvaluation",
            "UpdateMLModel"
        ]
    },
    "Amazon WorkSpaces Application Manager": {
        "StringPrefix": "wam",
        "Actions": [
            "AuthenticatePackager"
        ]
    }
};